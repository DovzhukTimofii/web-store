/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 scene.gltf
Author: League Studio (https://sketchfab.com/leaguestudio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chesterfield-sofa-66ba4225efaa4de59d9a9b7086363199
Title: chesterfield-sofa
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { Group, Material } from 'three';

interface SofaPops {
  [key: string]: any;
}

export const Sofa: React.FC<SofaPops> = (props) => {
  const { nodes, materials } = useGLTF('../../../public/models/sofa/scene.gltf') as unknown as {
    nodes: { [key: string]: Group };
    materials: { [key: string]: Material };
  };
  const sofaRef = useRef<Group>(null);

  useFrame(() => {
    if (sofaRef.current) {
      sofaRef.current.rotation.y += 0.01; 
    }
    
  });

  return (
    <group ref={sofaRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.282}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.025}>
          <group scale={0.394}>
            <mesh geometry={(nodes.sofa_geo_Leather_mat_0 as unknown as THREE.Mesh).geometry} material={materials.Leather_mat} />
            <mesh geometry={(nodes.sofa_geo_Leather_mat_0_1 as unknown as THREE.Mesh).geometry} material={materials.Leather_mat} />
          </group>
          <mesh geometry={(nodes.legs_geo4_wood_mat_0 as unknown as THREE.Mesh).geometry} material={materials.wood_mat} scale={0.394} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('../../../public/models/sofa/scene.gltf');

