/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 scene.gltf
Author: SK3D (https://sketchfab.com/SplashKid)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/old-ussr-lamp-73295d1f0d304975a5739c760e5fca7c
Title: Old "USSR" Lamp
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { Group, Material } from 'three';

interface LampPops {
  [key: string]: any;
}

export const Lamp: React.FC<LampPops> = (props) => {
  const { nodes, materials } = useGLTF('../../../public/models/lamp/scene.gltf') as unknown as {
    nodes: { [key: string]: Group };
    materials: { [key: string]: Material };
  };
  const lampRef = useRef<Group>(null);

  useFrame(() => {
    if (lampRef.current) {
      lampRef.current.rotation.y += 0.01; 
    }
  });

  return (
    <group ref={lampRef} {...props} dispose={null}>
      <mesh geometry={(nodes.Object_2 as unknown as THREE.Mesh).geometry} material={materials.material_0} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('../../../public/models/lamp/scene.gltf')
